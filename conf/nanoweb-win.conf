##################################################
#                                  
# aEGiS nanoweb configuration file 
# (c)2002-2003 by sIX / aEGiS <six@aegis-corp.org>
#

# The server mode is either "standalone" or "inetd". Use of the standalone
# mode is strongly recommended
ServerMode        = standalone

# IP address and port the server will listen on
ListenInterface   = 0.0.0.0
ListenPort        = 80

# Maximum number of queued connections
ListenQueue       = 20

# Maximum number of http requests per connection (0 to disable keep-alive)
KeepAlive         = 0

# Time to wait for http request before closing connection
RequestTimeout    = 15

# This is used to force nanoweb in single process mode. You should uncomment
# it when running in win32 or if your php binary was not compiled with pcntl
SingleProcessMode = 1

# Maximum number of child processes allowed to run at the same time
#MaxServers        = 100

# The absolute maximum time (seconds) a child process is allowed to live
ChildLifeTime     = 21600

# Use MaxRequestBodyLength in the global section or per vhost, to specify a
# maximum length for POST request entities
#MaxRequestBodyLength = 8192000

# MaxRequestURILength works like MaxRequestBodyLength except that it enforces
# a length limit on the requested URI (including query string)
#MaxRequestURILength = 1024

# This is the default content type sent when the server cannot determine a 
# MIME-type by examining the extensions of the requested file
DefaultContentType = text/plain

# Location of the nanoweb config directory, this is where nanoweb will search
# first for files used with "Include" and "LoadTheme" directives
ConfigDir         = c:\nanoweb

# Include modules configuration
Include           = modules.conf

# Location of the nanoweb pid file (needed by start/stop script nanoctl)
PidFile           = c:\nanoweb\nanoweb.pid

# Should nanoweb look for reverse DNS on each connection ?
HostnameLookups   = 1

# Defines which of the "server" or "logger" process should do the reverse DNS 
# query. Server has the advantage of providing your scripts/modules with the
# remote hostname. Logger should make the server faster.
HostnameLookupsBy = server

# The LoadTheme directive loads a server theme file and register it for use 
# with ServerTheme
LoadTheme         = default.theme
LoadTheme         = nanoweb.theme
#LoadTheme         = fancy.theme

# Defines which server theme will be used to render internal content. This
# directive can be used here, by vhost or in access files
#ServerTheme       = default
ServerTheme       = nanoweb

# Location of your mime types file
MimeTypes         = c:\nanoweb\mime.types

# Uncomment this to disable fallback to automatic mime type guessing
#DisableMimeMagic  = 1

# DefaultHandler defines which parser module should be the default content 
# handler (if there are no matches by ParseExt)
DefaultHandler    = static

# Define which extensions will be parsed and how.
# Syntax is ParseExt = extension TYPE [parameters]
# Valid types are defined by the modules you loaded. Parameters are type
# dependant (CGI takes path to CGI program, FCGI to FastCGI server socket)
# Note: For PHP CGI, you must specify the path of your php CGI binary, not 
# the CLI interpreter.
ParseExt          = shtml SSI
ParseExt          = exe CGI $SCRIPT_FILENAME
ParseExt          = php CGI c:\php\php-cgi.exe
ParseExt          = php3 CGI c:\php\php-cgi.exe
ParseExt          = php4 CGI c:\php\php-cgi.exe
#ParseExt          = asis asis
#ParseExt          = bsp BSP text/html
#ParseExt          = pl CGI c:\perl5\perl.exe $SCRIPT_FILENAME
#ParseExt          = phpf FCGI localhost:9000
#ParseExt          = zip UNZIP
#ParseExt          = lnk LNK

# Temporary directory, nanoweb must have read/write access to it
TempDir           = c:\nanoweb\tmp

# The name of the access file. Access files can be placed at any location
# inside the document root, and allow override of the default configuration
# values for every document in the directory and all its subdirectories.
AccessFile        = .nwaccess

# This defines the default access files policy regarding configuration values
# overriding. AccessPolicy can take three values :
# block    - set the default policy to block access files overrides
# override - set the default policy to override conf values with access files
# merge    - set the default policy to merge conf and access values
AccessPolicy      = override

# AccessBlock, AccessOverride and AccessMerge allow you to define an access
# policy for individual conf/access directives
AccessMerge       = alias
AccessMerge       = parseext
AccessMerge       = errordocument
#AccessBlock       = serveradmin

# Setting this to 1 will make nanoweb ignore .xxx files. This option is here
# mostly for security and it's often a good thing to enable it unless you know
# exactly what you are doing (think access and auth files).
IgnoreDotFiles    = 1

# Should we allow serving of documents outside the document root in case we
# have a symbolic link pointing there ? If needed, use AllowSymlinkTo to 
# provide a list of allowed targets for symbolic links. To allow all symbolic
# links, use "AllowSymlinkTo = /".
#AllowSymlinkTo   = c:\nanoweb\defaultroot\
#AllowSymlinkTo   = c:\nanoweb\nanoconfig\

# If AllowPathInfo is enabled, nanoweb will allow URLs like this one :
# http://www.example.com/script.php/arg1/arg2
AllowPathInfo     = 1

# Every PathInfoExt entry will be tested when nanoweb is looking for path info.
# For example, "PathInfoTryExt = php" allows you to call the above URL (in the
# AllowPathInfo example) like this : http://www.example.com/script/arg1/arg2
PathInfoTryExt     = php
#PathInfoTryExt     = bsp

# The default server name
ServerName        = localhost

# The e-mail address of the server administrator. Can be set for each vhost.
ServerAdmin       = root@localhost

# ServerSignature defines which server string is sent with every HTTP reponse.
# Valid types are :
# off  - no server string at all
# prod - only product name
# min  - product name and version
# os   - min + operating system name
# php  - os + php version
# full - php + modules tokens
# fake - any fake server string you define with ServerFakeSignature
ServerSignature   = full

# The fake server string which is sent if ServerSignature = fake
#ServerFakeSignature = Microsoft-IIS/5.0 with Nimda extensions

# A list of headers to add to HTTP responses. Can be set for each vhost.
#AddHeader         = X-Powered-By: beer

# A list of headers to add to HTTP error responses. Can be set for each vhost.
#ErrorHeader       = X-Powered-By: WindowsXP

# Documents to send on errors. Must reside in document root.
# Syntax is ErrorDocument = ERRNUM document.ext
#ErrorDocument     = 404 error404.php
#ErrorDocument     = 401 error401.php

# Server logs definitions. Syntax is "ServerLog = logfile logmodes".
# Available modes are : debug, hit, notice, warning, error, all and default
ServerLog         = c:\nanoweb\log\server.log default
ServerLog         = c:\nanoweb\log\error.log warning+error

# Default user and group nanoweb will run as.
User              = www-data
Group             = www-data

# Logger Process support. If enabled, nanoweb will spawn logger processes at
# launch and all logging will be done by them. This can help if you are using
# User or Group directives or simply want more performance from the server.
# Set to the number of loggers you want, or 0 to disable.
LoggerProcess      = 2

# User and group the nanoweb loggers will run as
#LoggerUser         = www-data
#LoggerGroup        = www-data

# LogDir let you specify the directory where nanoweb will write its log files
LogDir            = c:\nanoweb\log

# Default site configuration
DocumentRoot      = c:\nanoweb\www\default
DirectoryIndex    = index.php index.html
#DirectoryIndex    = index.html /var/www/browse-dir.php
Log               = access.log

# User directory, this is where nanoweb will look when parsing an URL like
# http://webserver/~user. This path is relative to the user homedir and can
# be set in the global section or for each virtual host.
UserDir           = public_html

# Declaration of aliased directory names. Syntax is :
# Alias = /virtualpath/ /real/path/
Alias             = /icons/ c:\nanoweb\www\icons\

# Add server variables, this can be used to set constants for your scripts, or
# to set some app specific vars like REDIRECT_STATUS for PHP.
# Syntax is : AddServerVar = VARNAME VALUE
#AddServerVar      = REDIRECT_STATUS 200

# Include virtual hosts config
Include           = vhosts.conf
